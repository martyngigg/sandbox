// This script expects the following environment variables to be set by the Jenkins job:
// GITHUB_USER_NAME - The name of the user, being used with pushing/pulling from conda-recipes whilst updating it.
// GITHUB_TOKEN_CREDENTIAL_ID - The name of the credentials token in Jenkins that you want to use for cloning and pushing to the conda-recipes repo
// ANACONDA_TOKEN_CREDENTIAL_ID - The name of the credentials token in Jenkins that you want to use for publishing conda packages
// ANACONDA_CHANNEL - The channel to publish to on Anaconda.org
// ANACONDA_CHANNEL_LABEL - This will be used as the label for the channel, otherwise no label will be set.

def build_and_test(platform) {
  if(platform.startsWith('win')) {
    echo "Doing windows"
    bat "\"${WIN_BASH}\" -ex -c \"${WORKSPACE_UNIX_PATH}/jenkins/test-buildscript ${WORKSPACE_UNIX_PATH} win\""
  } else {
    sh "bash -ex ${WORKSPACE}/jenkins/test-buildscript ${WORKSPACE} linux ${GIT_COMMIT}"
  }
}

def publish_test_reports() {
    xunit thresholds: [failed(failureThreshold: '0')], 
        tools: [CTest(excludesPattern: '', pattern: 'build/Testing/**/*.xml', stopProcessingIfError: true)]
    junit "build/Testing/SystemTests/scripts/TEST-*.xml"
}

def workspacePathUnixStyle() {
  return "${WORKSPACE}".replaceAll("\\\\", "/")
}

pipeline {
  agent none
  environment {
    WIN_BASH = "C:\\Program Files\\git\\bin\\bash.exe"
    WORKSPACE_UNIX_PATH = workspacePathUnixStyle()
  }

  stages {
    stage('Build and Test') {
      matrix {
       agent {
         label "${PLATFORM}"
       }
       axes {
         axis {
           name 'PLATFORM'
           values 'linux-64', 'win-64', 'osx-64'
         }
       }
       stages {   
         stage('') {
           steps {
             build_and_test("${PLATFORM}")
             }
            post {
              always {
                publish_test_reports()
              }
            }
          }
        }
      }
    }
  }
}
