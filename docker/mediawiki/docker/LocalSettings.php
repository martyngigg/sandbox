<?php
# This file was automatically generated by the MediaWiki 1.35.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "Mantid Project";
$wgMetaNamespace = "MantidProject";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = 'http://' . getenv('SERVER_HOST') . ':' . getenv('SERVER_PORT');

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [ '1x' => "$wgScriptPath/skins/Strapping/images/Mantid_Logo_Transparent_wiki.png" ];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "mantid-tech@mantidproject.org";
$wgPasswordSender = "mantid-tech@mantidproject.org";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = getenv('MEDIAWIKI_DATABASE_HOST');
$wgDBname = getenv('MEDIAWIKI_DATABASE_NAME');
$wgDBuser = getenv('MEDIAWIKI_DATABASE_USER');
$wgDBpassword = getenv('MEDIAWIKI_DATABASE_PASSWORD');

# MySQL specific settings
$wgDBprefix = "mp_";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

## Allow inline images from external sources
$wgAllowExternalImages = true;

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale. This should ideally be set to an English
## language locale so that the behaviour of C library functions will
## be consistent with typical installations. Use $wgLanguageCode to
## localise the wiki.
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en-gb";

$wgSecretKey = "291afbee65d2f3b3d3cff70457f6f8dd8181dd2f786bfe6175ec1eb40d2c24b5";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "558508cd1ee4c092";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Skins
wfLoadSkin( 'Strapping' );
$wgDefaultSkin = 'strapping';

## Extensions
# NoTitle
wfLoadExtension( 'NoTitle' );
$wgRestrictDisplayTitle = false;
# SyntaxHighlighting bundle with 1.30+ requires python3
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'Math' );
wfLoadExtension( 'RSS' );

# ConfirmAccount - confirm accounts via mail
wfLoadExtension( 'ConfirmAccount' );
$wgConfirmAccountContact = 'mantid-tech@mantidproject.org';
$wgConfirmAccountRequestFormItems = array(
 	'UserName'        => array( 'enabled' => true ),
 	'RealName'        => array( 'enabled' => false ),
 	'Biography'       => array( 'enabled' => false),
 	'AreasOfInterest' => array( 'enabled' => false ),
 	'CV'              => array( 'enabled' => false ),
 	'Notes'           => array( 'enabled' => false ),
 	'Links'           => array( 'enabled' => false ),
 	'TermsOfService'  => array( 'enabled' => false ),
);

# Lockdown - provides protected pages
wfLoadExtension( 'Lockdown' );
# Use A Private Namespace
# Define Custom Namespaces
$Wgextranamespaces[3000] = 'Private';
$Wgextranamespaces[3001] = 'Private_talk';
# Restrict "Read" Permission To Sysop Users
$Wgnamespacepermissionlockdown[3000]['Read'] = Array('Sysop');
$Wgnamespacepermissionlockdown[3001]['Read'] = Array('Sysop');
#Prevent Inclusion Of Pages From That Namespace
$Wgnonincludablenamespaces[] = 3000;
$Wgnonincludablenamespaces[] = 3001;
## end Extensions

## Disable anonymous edits
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['read'] = true;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['*']['createpage'] = false;
$wgGroupPermissions['*']['createtalk'] = false;

# Enable editing for confirmed users
# Make it so users with confirmed e-mail addresses are in the group.
$wgAutopromote['emailconfirmed'] = APCOND_EMAILCONFIRMED;
# Hide group from user list.
$wgImplicitGroups[] = 'emailconfirmed';
# Finally, set it to true for the desired group.
$wgGroupPermissions['emailconfirmed']['edit'] = true;
# + allow email-confirmed users to delete pages
$wgGroupPermissions['emailconfirmed']['delete'] = true;

# Debugging
if (getenv('DEBUG') !== false) {
  $wgShowExceptionDetails = true;
}